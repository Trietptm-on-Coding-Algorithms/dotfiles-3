#!/usr/bin/env bash
# Author: Nathan Farrar <nfarrar@crunk.io>
# Description: graceful sparsecheckout configuration {{{
#
#   Configure default sparse-checkout behavior for vcsh repositories.
#   - $GIT_DIR is populated by VCSH and points to the repositories
#     '.git' directory.
#   - $VCSH_REPO_NAME is populated by VCSH.
#
# }}}


# bash 'strict' execution
set -euo pipefail
IFS=$'\n'

# constants
HOOK_PATH="${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}"
HOOK_NAME="${HOOK_PATH##*/}"
HOOK_BRANCH="$(git symbolic-ref --short HEAD)"

# settings
HOOK_VERBOSE=1
HOOK_LOG_FILE="/tmp/${HOOK_NAME}.log"
HOOK_MSG_COLOR="\x1b[2;37m"
HOOK_MSG_RESET="\x1b[0m"
HOOK_SPARSECHECKOUT_FILE="$GIT_DIR/info/sparse-checkout"
HOOK_IGNORE_PATTERNS=(
  '*'
  !.gitignore
  !.travis.yml
  !LICENSE*
  !README*
  !Vagrantfile
  !docs/**
)

debug() {
  [[ -z $1 ]] && return 1
  lines=($1)
  for line in "${lines[@]}"; do
    printf "%s\n" "$line" >> "$HOOK_LOG_FILE"
    if [[ $HOOK_VERBOSE -eq 1 ]]; then
      printf "${HOOK_MSG_COLOR}  %s${HOOK_MSG_RESET}\n" "$line" >&2
    fi
  done
}

debug "-----------------------------------------------------------------"
debug "START:       $(date)"
debug "HOOK_NAME:   $HOOK_NAME"
debug "BRANCH_NAME: $HOOK_BRANCH"
debug "-----------------------------------------------------------------"

# configure sparsecheckout (if not already done)
if [[ "$(git config core.sparseCheckout)" == "true" ]]; then
  debug "$VCSH_REPO_NAME already configured for sparsecheckout"
else
  debug "enabling sparse-checkout for $VCSH_REPO_NAME"
  git config core.sparseCheckout true
fi

# create the sparsecheckout file
if [[ -f "$HOOK_SPARSECHECKOUT_FILE" ]]; then
  debug "~/${HOOK_SPARSECHECKOUT_FILE#$HOME/} already exists"
else
  debug "creating file ~/${HOOK_SPARSECHECKOUT_FILE#$HOME/}"
  touch "$HOOK_SPARSECHECKOUT_FILE"
fi

# write patterns to sparsecheckout file
for pattern in "${HOOK_IGNORE_PATTERNS[@]}"; do
  if grep -q "$pattern" "$HOOK_SPARSECHECKOUT_FILE"; then
    debug "pattern '$pattern' already present in ~/${HOOK_SPARSECHECKOUT_FILE#$HOME/}"
  else
    debug "adding '$pattern' to $HOOK_SPARSECHECKOUT_FILE"
    echo "$pattern" >> "$HOOK_SPARSECHECKOUT_FILE"
  fi
done
